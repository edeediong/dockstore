components:
  schemas:
    Alias:
      properties:
        content:
          type: string
      type: object
    Aliasable:
      properties:
        aliases:
          additionalProperties:
            $ref: '#/components/schemas/Alias'
          type: object
      type: object
    BioWorkflow:
      allOf:
      - $ref: '#/components/schemas/Workflow'
      - properties:
          is_checker:
            type: boolean
          parent_id:
            format: int64
            type: integer
        type: object
      type: object
    Checksum:
      description: 'A production (immutable) tool version is required to have a hashcode.
        Not required otherwise, but might be useful to detect changes. '
      example: '[{checksum=ea2a5db69bd20a42976838790bc29294df3af02b, type=sha1}]'
      properties:
        checksum:
          description: 'The hex-string encoded checksum for the data. '
          type: string
        type:
          description: The digest method used to create the checksum. The value (e.g.
            `sha-256`) SHOULD be listed as `Hash Name String` in the https://github.com/ga4gh-discovery/ga4gh-checksum/blob/master/hash-alg.csv[GA4GH
            Checksum Hash Algorithm Registry]. Other values MAY be used, as long as
            implementors are aware of the issues discussed in https://tools.ietf.org/html/rfc6920#section-9.4[RFC6920].
            GA4GH may provide more explicit guidance for use of non-IANA-registered
            algorithms in the future.
          type: string
      required:
      - checksum
      - type
      type: object
    Collection:
      description: Collection in an organization, collects entries
      properties:
        aliases:
          additionalProperties:
            $ref: '#/components/schemas/Alias'
          type: object
        dbCreateDate:
          format: date-time
          type: string
        dbUpdateDate:
          format: date-time
          type: string
        description:
          description: Description of the collection
          type: string
        displayName:
          maxLength: 50
          minLength: 3
          pattern: '[\w ,_\-&()'']*'
          type: string
        entries:
          items:
            $ref: '#/components/schemas/Entry'
          type: array
          uniqueItems: true
        id:
          description: Implementation specific ID for the collection in this web service
          format: int64
          type: integer
        name:
          description: Name of the collection
          example: Alignment
          maxLength: 39
          minLength: 3
          pattern: '[a-zA-Z][a-zA-Z\d]*'
          type: string
        organizationID:
          format: int64
          type: integer
        organizationName:
          type: string
        topic:
          description: Short description of the collection
          example: A collection of alignment algorithms
          type: string
      required:
      - name
      - topic
      type: object
    Config:
      properties:
        bdCatalystSevenBridgesImportUrl:
          type: string
        bdCatalystTerraImportUrl:
          type: string
        bitBucketAuthUrl:
          type: string
        bitBucketClientId:
          type: string
        cwlVisualizerUri:
          type: string
        discourseUrl:
          type: string
        dnaNexusImportUrl:
          type: string
        dnaStackImportUrl:
          type: string
        documentationUrl:
          type: string
        featuredContentUrl:
          type: string
        gitBuildVersion:
          type: string
        gitCommitId:
          type: string
        gitHubAppInstallationUrl:
          type: string
        gitHubAuthUrl:
          type: string
        gitHubRedirectPath:
          type: string
        gitHubScope:
          type: string
        githubClientId:
          type: string
        gitlabAuthUrl:
          type: string
        gitlabClientId:
          type: string
        gitlabRedirectPath:
          type: string
        gitlabScope:
          type: string
        googleClientId:
          type: string
        googleScope:
          type: string
        orcidAuthUrl:
          type: string
        orcidClientId:
          type: string
        orcidRedirectPath:
          type: string
        orcidScope:
          type: string
        quayIoAuthUrl:
          type: string
        quayIoClientId:
          type: string
        quayIoRedirectPath:
          type: string
        quayIoScope:
          type: string
        tagManagerId:
          type: string
        terraImportUrl:
          type: string
        zenodoAuthUrl:
          type: string
        zenodoClientId:
          type: string
        zenodoRedirectPath:
          type: string
        zenodoScope:
          type: string
      type: object
    DescriptorLanguageBean:
      properties:
        friendlyName:
          type: string
        value:
          type: string
      type: object
    Entry:
      properties:
        aliases:
          additionalProperties:
            $ref: '#/components/schemas/Alias'
          type: object
        author:
          type: string
        checker_id:
          format: int64
          type: integer
        conceptDoi:
          type: string
        dbCreateDate:
          format: date-time
          type: string
        dbUpdateDate:
          format: date-time
          type: string
        defaultVersion:
          type: string
        description:
          type: string
        email:
          type: string
        gitUrl:
          type: string
        has_checker:
          type: boolean
        id:
          format: int64
          type: integer
        input_file_formats:
          items:
            $ref: '#/components/schemas/FileFormat'
          type: array
          uniqueItems: true
        isPublished:
          type: boolean
        labels:
          items:
            $ref: '#/components/schemas/Label'
          type: array
          uniqueItems: true
        lastUpdated:
          format: date-time
          type: string
        last_modified:
          format: int32
          type: integer
        last_modified_date:
          format: date-time
          type: string
        metadataFromEntry:
          $ref: '#/components/schemas/Entry'
        metadataFromVersion:
          $ref: '#/components/schemas/Version'
        output_file_formats:
          items:
            $ref: '#/components/schemas/FileFormat'
          type: array
          uniqueItems: true
        starredUsers:
          items:
            $ref: '#/components/schemas/User'
          type: array
          uniqueItems: true
        state:
          enum:
          - ARCHIVE
          - DRAFT
          - DELETE
          - REDACTED
          - PUBLISHED
          type: string
        topicId:
          format: int64
          type: integer
        users:
          items:
            $ref: '#/components/schemas/User'
          type: array
          uniqueItems: true
        workflowVersions:
          items:
            $ref: '#/components/schemas/Version'
          type: array
          uniqueItems: true
      type: object
    EntryUpdateTime:
      properties:
        entryType:
          enum:
          - TOOL
          - WORKFLOW
          - SERVICE
          type: string
        lastUpdateDate:
          format: date-time
          type: string
        path:
          type: string
        prettyPath:
          type: string
      type: object
    Error:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      required:
      - code
      type: object
    Event:
      properties:
        collection:
          $ref: '#/components/schemas/Collection'
        dbCreateDate:
          format: date-time
          type: string
        dbUpdateDate:
          format: date-time
          type: string
        id:
          format: int64
          type: integer
        initiatorUser:
          $ref: '#/components/schemas/User'
        organization:
          $ref: '#/components/schemas/Organization'
        tool:
          $ref: '#/components/schemas/Tool'
        type:
          enum:
          - CREATE_ORG
          - DELETE_ORG
          - MODIFY_ORG
          - APPROVE_ORG
          - REJECT_ORG
          - REREQUEST_ORG
          - ADD_USER_TO_ORG
          - REMOVE_USER_FROM_ORG
          - MODIFY_USER_ROLE_ORG
          - APPROVE_ORG_INVITE
          - REJECT_ORG_INVITE
          - CREATE_COLLECTION
          - MODIFY_COLLECTION
          - REMOVE_FROM_COLLECTION
          - ADD_TO_COLLECTION
          - ADD_VERSION_TO_ENTRY
          type: string
        user:
          $ref: '#/components/schemas/User'
        version:
          $ref: '#/components/schemas/Version'
        workflow:
          $ref: '#/components/schemas/Workflow'
      type: object
    FileFormat:
      properties:
        value:
          type: string
      type: object
    FileWrapper:
      description: 'A file provides content for one of - A tool descriptor is a metadata
        document that describes one or more tools. - A tool document that describes
        how to test with one or more sample test JSON. - A containerfile is a document
        that describes how to build a particular container image. Examples include
        Dockerfiles for creating Docker images and Singularity recipes for Singularity
        images '
      properties:
        checksum:
          description: 'A production (immutable) tool version is required to have
            a hashcode. Not required otherwise, but might be useful to detect changes. '
          example: '[{checksum=ea2a5db69bd20a42976838790bc29294df3af02b, type=sha1}]'
          items:
            $ref: '#/components/schemas/Checksum'
          type: array
        content:
          description: The content of the file itself. One of url or content is required.
          type: string
        url:
          description: Optional url to the underlying content, should include version
            information, and can include a git hash.  Note that this URL should resolve
            to the raw unwrapped content that would otherwise be available in content.
            One of url or content is required.
          type: string
      type: object
    Image:
      properties:
        checksums:
          items:
            $ref: '#/components/schemas/Checksum'
          type: array
        imageID:
          type: string
        imageRegistry:
          enum:
          - QUAY_IO
          - DOCKER_HUB
          - GITLAB
          - AMAZON_ECR
          - SEVEN_BRIDGES
          type: string
        repository:
          type: string
        tag:
          type: string
      type: object
    ImageData:
      description: Describes one container image.
      properties:
        checksum:
          description: A production (immutable) tool version is required to have a
            hashcode. Not required otherwise, but might be useful to detect changes.  This
            exposes the hashcode for specific image versions to verify that the container
            version pulled is actually the version that was indexed by the registry.
          example: '[{checksum=77af4d6b9913e693e8d0b4b294fa62ade6054e6b2f1ffb617ac955dd63fb0182,
            type=sha256}]'
          items:
            $ref: '#/components/schemas/Checksum'
          type: array
        image_name:
          description: Used in conjunction with a registry_url if provided to locate
            images.
          type: string
        image_type:
          enum:
          - Docker
          - Singularity
          - Conda
          type: string
        registry_host:
          description: A docker registry or a URL to a Singularity registry. Used
            along with image_name to locate a specific image.
          type: string
        size:
          description: Size of the container in bytes.
          format: int32
          type: integer
        updated:
          description: Last time the container was updated.
          type: string
      type: object
    Label:
      properties:
        id:
          format: int64
          type: integer
        value:
          type: string
      type: object
    Organization:
      properties:
        aliases:
          additionalProperties:
            $ref: '#/components/schemas/Alias'
          type: object
        avatarUrl:
          pattern: ([^\s]+)(\.jpg|\.jpeg|\.png|\.gif)
          type: string
        dbCreateDate:
          format: date-time
          type: string
        dbUpdateDate:
          format: date-time
          type: string
        description:
          type: string
        displayName:
          maxLength: 50
          minLength: 3
          pattern: '[\w ,_\-&()'']*'
          type: string
        email:
          type: string
        id:
          format: int64
          type: integer
        link:
          type: string
        location:
          type: string
        name:
          maxLength: 39
          minLength: 3
          pattern: '[a-zA-Z][a-zA-Z\d]*'
          type: string
        starredUsers:
          items:
            $ref: '#/components/schemas/User'
          type: array
          uniqueItems: true
        status:
          enum:
          - PENDING
          - REJECTED
          - APPROVED
          type: string
        topic:
          type: string
        users:
          items:
            $ref: '#/components/schemas/OrganizationUser'
          type: array
          uniqueItems: true
      type: object
    OrganizationUpdateTime:
      properties:
        displayName:
          type: string
        lastUpdateDate:
          format: date-time
          type: string
        name:
          type: string
      type: object
    OrganizationUser:
      properties:
        accepted:
          type: boolean
        dbCreateDate:
          format: date-time
          type: string
        dbUpdateDate:
          format: date-time
          type: string
        id:
          $ref: '#/components/schemas/OrganizationUserId'
        organization:
          $ref: '#/components/schemas/Organization'
        role:
          enum:
          - MAINTAINER
          - MEMBER
          type: string
        user:
          $ref: '#/components/schemas/User'
      type: object
    OrganizationUserId:
      properties:
        organizationId:
          format: int64
          type: integer
        userId:
          format: int64
          type: integer
      type: object
    Profile:
      properties:
        avatarURL:
          type: string
        bio:
          type: string
        company:
          type: string
        email:
          type: string
        location:
          type: string
        name:
          type: string
        username:
          type: string
      type: object
    RegistryBean:
      properties:
        customDockerPath:
          type: string
        dockerPath:
          type: string
        enum:
          type: string
        friendlyName:
          type: string
        privateOnly:
          type: string
        url:
          type: string
      type: object
    Repository:
      properties:
        canDelete:
          type: boolean
        gitRegistry:
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
          type: string
        organization:
          type: string
        path:
          type: string
        present:
          type: boolean
        repositoryName:
          type: string
      type: object
    Service:
      allOf:
      - $ref: '#/components/schemas/Workflow'
      type: object
    SourceControlBean:
      properties:
        friendlyName:
          type: string
        value:
          type: string
      type: object
    SourceFile:
      properties:
        absolutePath:
          type: string
        content:
          type: string
        frozen:
          type: boolean
        id:
          format: int64
          type: integer
        path:
          type: string
        type:
          enum:
          - DOCKSTORE_CWL
          - DOCKSTORE_WDL
          - DOCKERFILE
          - CWL_TEST_JSON
          - WDL_TEST_JSON
          - NEXTFLOW
          - NEXTFLOW_CONFIG
          - NEXTFLOW_TEST_PARAMS
          - DOCKSTORE_YML
          - DOCKSTORE_SERVICE_YML
          - DOCKSTORE_SERVICE_TEST_JSON
          - DOCKSTORE_SERVICE_OTHER
          - DOCKSTORE_GXFORMAT2
          - GXFORMAT2_TEST_FILE
          - DOCKSTORE_SWL
          - SWL_TEST_JSON
          type: string
        verifiedBySource:
          additionalProperties:
            $ref: '#/components/schemas/VerificationInformation'
          type: object
      type: object
    StarRequest:
      properties:
        star:
          type: boolean
      type: object
    Tag:
      properties:
        author:
          type: string
        automated:
          type: boolean
        commitID:
          type: string
        cwl_path:
          type: string
        dbUpdateDate:
          format: date-time
          type: string
        description:
          type: string
        descriptionSource:
          enum:
          - README
          - DESCRIPTOR
          type: string
        dirtyBit:
          type: boolean
        dockerfile_path:
          type: string
        doiStatus:
          enum:
          - NOT_REQUESTED
          - REQUESTED
          - CREATED
          type: string
        doiURL:
          type: string
        email:
          type: string
        frozen:
          type: boolean
        hidden:
          type: boolean
        id:
          format: int64
          type: integer
        image_id:
          type: string
        images:
          items:
            $ref: '#/components/schemas/Image'
          type: array
          uniqueItems: true
        input_file_formats:
          items:
            $ref: '#/components/schemas/FileFormat'
          type: array
          uniqueItems: true
        last_built:
          format: date-time
          type: string
        name:
          type: string
        output_file_formats:
          items:
            $ref: '#/components/schemas/FileFormat'
          type: array
          uniqueItems: true
        reference:
          type: string
        referenceType:
          enum:
          - COMMIT
          - TAG
          - BRANCH
          - NOT_APPLICABLE
          - UNSET
          type: string
        size:
          format: int64
          type: integer
        sourceFiles:
          items:
            $ref: '#/components/schemas/SourceFile'
          type: array
          uniqueItems: true
        valid:
          type: boolean
        validations:
          items:
            $ref: '#/components/schemas/Validation'
          type: array
          uniqueItems: true
        verified:
          type: boolean
        verifiedSource:
          type: string
        verifiedSources:
          items:
            type: string
          type: array
        versionEditor:
          $ref: '#/components/schemas/User'
        wdl_path:
          type: string
        workingDirectory:
          type: string
      type: object
    Token:
      properties:
        content:
          type: string
        dbCreateDate:
          format: date-time
          type: string
        dbUpdateDate:
          format: date-time
          type: string
        id:
          format: int64
          type: integer
        refreshToken:
          type: string
        token:
          type: string
        tokenSource:
          enum:
          - quay.io
          - github.com
          - dockstore
          - bitbucket.org
          - gitlab.com
          - zenodo.org
          - google.com
          - orcid.org
          type: string
        userId:
          format: int64
          type: integer
        username:
          type: string
      type: object
    Tool:
      description: A tool (or described tool) is defined as a tuple of a descriptor
        file (which potentially consists of multiple files), a set of container images,
        and a set of instructions for creating those images.
      properties:
        aliases:
          description: Support for this parameter is optional for tool registries
            that support aliases. A list of strings that can be used to identify this
            tool which could be  straight up URLs.  This can be used to expose alternative
            ids (such as GUIDs) for a tool for registries. Can be used to match tools
            across registries.
          items:
            description: Support for this parameter is optional for tool registries
              that support aliases. A list of strings that can be used to identify
              this tool which could be  straight up URLs.  This can be used to expose
              alternative ids (such as GUIDs) for a tool for registries. Can be used
              to match tools across registries.
            type: string
          type: array
        checker_url:
          description: Optional url to the checker tool that will exit successfully
            if this tool produced the expected result given test data.
          type: string
        description:
          description: The description of the tool.
          type: string
        has_checker:
          description: Whether this tool has a checker tool associated with it.
          type: boolean
        id:
          description: A unique identifier of the tool, scoped to this registry.
          example: "123456"
          type: string
        meta_version:
          description: The version of this tool in the registry. Iterates when fields
            like the description, author, etc. are updated.
          type: string
        name:
          description: The name of the tool.
          type: string
        organization:
          description: The organization that published the image.
          type: string
        toolclass:
          $ref: '#/components/schemas/ToolClass'
        url:
          description: The URL for this tool in this registry.
          example: http://agora.broadinstitute.org/tools/123456
          type: string
        versions:
          description: A list of versions for this tool.
          items:
            $ref: '#/components/schemas/ToolVersion'
          type: array
      required:
      - id
      - organization
      - toolclass
      - url
      - versions
      type: object
    ToolClass:
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    ToolDescriptor:
      properties:
        descriptor:
          type: string
        type:
          enum:
          - CWL
          - WDL
          - NFL
          - SERVICE
          - GXFORMAT2
          type: string
        url:
          type: string
      required:
      - type
      type: object
    ToolDockerfile:
      properties:
        dockerfile:
          type: string
        url:
          type: string
      type: object
    ToolFile:
      properties:
        file_type:
          enum:
          - TEST_FILE
          - PRIMARY_DESCRIPTOR
          - SECONDARY_DESCRIPTOR
          - CONTAINERFILE
          - OTHER
          type: string
        path:
          description: Relative path of the file.  A descriptor's path can be used
            with the GA4GH .../{type}/descriptor/{relative_path} endpoint.
          type: string
      type: object
    ToolTesterLog:
      properties:
        filename:
          type: string
        logType:
          enum:
          - FULL
          - SUMMARY
          type: string
        runner:
          type: string
        testFilename:
          type: string
        toolId:
          type: string
        toolVersionName:
          type: string
      type: object
    ToolTestsV1:
      properties:
        test:
          type: string
        url:
          type: string
      type: object
    ToolV1:
      properties:
        author:
          type: string
        contains:
          items:
            type: string
          type: array
        description:
          type: string
        id:
          type: string
        meta-version:
          type: string
        organization:
          type: string
        signed:
          type: boolean
        toolclass:
          $ref: '#/components/schemas/ToolClass'
        toolname:
          type: string
        url:
          type: string
        verified:
          type: boolean
        verified-source:
          type: string
        versions:
          items:
            $ref: '#/components/schemas/ToolVersionV1'
          type: array
      type: object
    ToolVersion:
      description: A tool version describes a particular iteration of a tool as described
        by a reference to a specific image and/or documents.
      properties:
        author:
          description: Contact information for the author of this version of the tool
            in the registry. (More complex authorship information is handled by the
            descriptor).
          items:
            description: Contact information for the author of this version of the
              tool in the registry. (More complex authorship information is handled
              by the descriptor).
            type: string
          type: array
        containerfile:
          description: Reports if this tool has a containerfile available. (For Docker-based
            tools, this would indicate the presence of a Dockerfile)
          type: boolean
        descriptor_type:
          description: The type (or types) of descriptors available.
          items:
            description: The type (or types) of descriptors available.
            enum:
            - CWL
            - WDL
            - NFL
            - SERVICE
            - GXFORMAT2
            type: string
          type: array
        id:
          description: An identifier of the version of this tool for this particular
            tool registry.
          example: v1
          type: string
        images:
          description: All known docker images (and versions/hashes) used by this
            tool. If the tool has to evaluate any of the docker images strings at
            runtime, those ones cannot be reported here.
          items:
            $ref: '#/components/schemas/ImageData'
          type: array
        included_apps:
          description: An array of IDs for the applications that are stored inside
            this tool.
          example: '[https://bio.tools/tool/mytum.de/SNAP2/1, https://bio.tools/bioexcel_seqqc]'
          items:
            description: An array of IDs for the applications that are stored inside
              this tool.
            example: '[https://bio.tools/tool/mytum.de/SNAP2/1, https://bio.tools/bioexcel_seqqc]'
            type: string
          type: array
        is_production:
          description: This version of a tool is guaranteed to not change over time
            (for example, a  tool built from a tag in git as opposed to a branch).
            A production quality tool  is required to have a checksum
          type: boolean
        meta_version:
          description: The version of this tool version in the registry. Iterates
            when fields like the description, author, etc. are updated.
          type: string
        name:
          description: The name of the version.
          type: string
        signed:
          description: Reports whether this version of the tool has been signed.
          type: boolean
        url:
          description: The URL for this tool version in this registry.
          example: http://agora.broadinstitute.org/tools/123456/versions/1
          type: string
        verified:
          description: Reports whether this tool has been verified by a specific organization
            or individual.
          type: boolean
        verified_source:
          description: Source of metadata that can support a verified tool, such as
            an email or URL.
          items:
            description: Source of metadata that can support a verified tool, such
              as an email or URL.
            type: string
          type: array
      required:
      - id
      - url
      type: object
    ToolVersionV1:
      properties:
        descriptor-type:
          items:
            enum:
            - CWL
            - WDL
            type: string
          type: array
        dockerfile:
          type: boolean
        id:
          type: string
        image:
          type: string
        meta-version:
          type: string
        name:
          type: string
        url:
          type: string
        verified:
          type: boolean
        verified-source:
          type: string
      type: object
    User:
      properties:
        avatarUrl:
          type: string
        curator:
          type: boolean
        id:
          format: int64
          type: integer
        isAdmin:
          type: boolean
        name:
          type: string
        privacyPolicyVersion:
          enum:
          - NONE
          - PRIVACY_POLICY_VERSION_2_5
          type: string
        privacyPolicyVersionAcceptanceDate:
          format: date-time
          type: string
        setupComplete:
          type: boolean
        tosacceptanceDate:
          format: date-time
          type: string
        tosversion:
          enum:
          - NONE
          - TOS_VERSION_1
          type: string
        tosversionAcceptanceDate:
          format: date-time
          type: string
          writeOnly: true
        userProfiles:
          additionalProperties:
            $ref: '#/components/schemas/Profile'
          type: object
        username:
          type: string
      type: object
    Validation:
      properties:
        id:
          format: int64
          type: integer
        message:
          type: string
        type:
          enum:
          - DOCKSTORE_CWL
          - DOCKSTORE_WDL
          - DOCKERFILE
          - CWL_TEST_JSON
          - WDL_TEST_JSON
          - NEXTFLOW
          - NEXTFLOW_CONFIG
          - NEXTFLOW_TEST_PARAMS
          - DOCKSTORE_YML
          - DOCKSTORE_SERVICE_YML
          - DOCKSTORE_SERVICE_TEST_JSON
          - DOCKSTORE_SERVICE_OTHER
          - DOCKSTORE_GXFORMAT2
          - GXFORMAT2_TEST_FILE
          - DOCKSTORE_SWL
          - SWL_TEST_JSON
          type: string
        valid:
          type: boolean
      type: object
    VerificationInformation:
      properties:
        metadata:
          type: string
        platformVersion:
          type: string
        verified:
          type: boolean
      type: object
    Version:
      properties:
        author:
          type: string
        commitID:
          type: string
        dbUpdateDate:
          format: date-time
          type: string
        description:
          type: string
        descriptionSource:
          enum:
          - README
          - DESCRIPTOR
          type: string
        dirtyBit:
          type: boolean
        doiStatus:
          enum:
          - NOT_REQUESTED
          - REQUESTED
          - CREATED
          type: string
        doiURL:
          type: string
        email:
          type: string
        frozen:
          type: boolean
        hidden:
          type: boolean
        id:
          format: int64
          type: integer
        images:
          items:
            $ref: '#/components/schemas/Image'
          type: array
          uniqueItems: true
        input_file_formats:
          items:
            $ref: '#/components/schemas/FileFormat'
          type: array
          uniqueItems: true
        name:
          type: string
        output_file_formats:
          items:
            $ref: '#/components/schemas/FileFormat'
          type: array
          uniqueItems: true
        reference:
          type: string
        referenceType:
          enum:
          - COMMIT
          - TAG
          - BRANCH
          - NOT_APPLICABLE
          - UNSET
          type: string
        sourceFiles:
          items:
            $ref: '#/components/schemas/SourceFile'
          type: array
          uniqueItems: true
        valid:
          type: boolean
        validations:
          items:
            $ref: '#/components/schemas/Validation'
          type: array
          uniqueItems: true
        verified:
          type: boolean
        verifiedSource:
          type: string
        verifiedSources:
          items:
            type: string
          type: array
        versionEditor:
          $ref: '#/components/schemas/User'
        workingDirectory:
          type: string
      type: object
    Workflow:
      discriminator:
        propertyName: type
      properties:
        aliases:
          additionalProperties:
            $ref: '#/components/schemas/Alias'
          type: object
        author:
          type: string
        checker_id:
          format: int64
          type: integer
        conceptDoi:
          type: string
        dbCreateDate:
          format: date-time
          type: string
        dbUpdateDate:
          format: date-time
          type: string
        defaultTestParameterFilePath:
          type: string
        defaultVersion:
          type: string
        description:
          type: string
        descriptorType:
          enum:
          - CWL
          - WDL
          - gxformat2
          - SWL
          - NFL
          - service
          
          
          type: string
        descriptorTypeSubclass:
          enum:
          - docker-compose
          - helm
          - swarm
          - kubernetes
          - n/a
          type: string
        email:
          type: string
        full_workflow_path:
          type: string
        gitUrl:
          type: string
        has_checker:
          type: boolean
        id:
          format: int64
          type: integer
        input_file_formats:
          items:
            $ref: '#/components/schemas/FileFormat'
          type: array
          uniqueItems: true
        isChecker:
          type: boolean
        isPublished:
          type: boolean
        labels:
          items:
            $ref: '#/components/schemas/Label'
          type: array
          uniqueItems: true
        lastUpdated:
          format: date-time
          type: string
        last_modified:
          format: int32
          type: integer
        last_modified_date:
          format: date-time
          type: string
        metadataFromEntry:
          $ref: '#/components/schemas/Workflow'
        metadataFromVersion:
          $ref: '#/components/schemas/Version'
        mode:
          enum:
          - FULL
          - STUB
          - HOSTED
          - SERVICE
          - DOCKSTORE_YML
          type: string
        organization:
          type: string
        output_file_formats:
          items:
            $ref: '#/components/schemas/FileFormat'
          type: array
          uniqueItems: true
        parentEntry:
          $ref: '#/components/schemas/Entry'
        path:
          type: string
        repository:
          type: string
        sourceControl:
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
          type: string
        source_control_provider:
          type: string
        starredUsers:
          items:
            $ref: '#/components/schemas/User'
          type: array
          uniqueItems: true
        state:
          enum:
          - ARCHIVE
          - DRAFT
          - DELETE
          - REDACTED
          - PUBLISHED
          type: string
        topicId:
          format: int64
          type: integer
        type:
          type: string
        users:
          items:
            $ref: '#/components/schemas/User'
          type: array
          uniqueItems: true
        workflowName:
          type: string
        workflowVersions:
          items:
            $ref: '#/components/schemas/WorkflowVersion'
          type: array
          uniqueItems: true
        workflow_path:
          type: string
      required:
      - type
      type: object
    WorkflowVersion:
      properties:
        aliases:
          additionalProperties:
            $ref: '#/components/schemas/Alias'
          type: object
        author:
          type: string
        commitID:
          type: string
        dbUpdateDate:
          format: date-time
          type: string
        description:
          type: string
        descriptionSource:
          enum:
          - README
          - DESCRIPTOR
          type: string
        dirtyBit:
          type: boolean
        doiStatus:
          enum:
          - NOT_REQUESTED
          - REQUESTED
          - CREATED
          type: string
        doiURL:
          type: string
        email:
          type: string
        frozen:
          type: boolean
        hidden:
          type: boolean
        id:
          format: int64
          type: integer
        images:
          items:
            $ref: '#/components/schemas/Image'
          type: array
          uniqueItems: true
        input_file_formats:
          items:
            $ref: '#/components/schemas/FileFormat'
          type: array
          uniqueItems: true
        last_modified:
          format: date-time
          type: string
        legacyVersion:
          type: boolean
        name:
          type: string
        output_file_formats:
          items:
            $ref: '#/components/schemas/FileFormat'
          type: array
          uniqueItems: true
        reference:
          type: string
        referenceType:
          enum:
          - COMMIT
          - TAG
          - BRANCH
          - NOT_APPLICABLE
          - UNSET
          type: string
        sourceFiles:
          items:
            $ref: '#/components/schemas/SourceFile'
          type: array
          uniqueItems: true
        subClass:
          enum:
          - DOCKER_COMPOSE
          - SWARM
          - KUBERNETES
          - HELM
          type: string
        valid:
          type: boolean
        validations:
          items:
            $ref: '#/components/schemas/Validation'
          type: array
          uniqueItems: true
        verified:
          type: boolean
        verifiedSource:
          type: string
        verifiedSources:
          items:
            type: string
          type: array
        versionEditor:
          $ref: '#/components/schemas/User'
        workflow_path:
          type: string
        workingDirectory:
          type: string
      type: object
  securitySchemes:
    bearer:
      scheme: bearer
      type: http
info:
  contact:
    email: theglobalalliance@genomicsandhealth.org
    name: Dockstore@ga4gh
    url: https://discuss.dockstore.org/t/opening-helpdesk-tickets/1506
  description: This describes the dockstore API, a webservice that manages pairs of
    Docker images and associated metadata such as CWL documents and Dockerfiles used
    to build those images. Explore swagger.json for a Swagger 2.0 description of our
    API and explore openapi.yaml for OpenAPI 3.0 descriptions.
  license:
    name: Apache License Version 2.0
    url: https://github.com/dockstore/dockstore/blob/develop/LICENSE
  termsOfService: TBD
  title: Dockstore API
  version: 1.9.0-alpha.5-SNAPSHOT
openapi: 3.0.1
paths:
  /api/ga4gh/v1/tools:
    get:
      description: This endpoint returns all tools available or a filtered subset
        using metadata query parameters.
      operationId: toolsGetV1
      parameters:
      - in: query
        name: id
        schema:
          type: string
      - in: query
        name: registry
        schema:
          type: string
      - in: query
        name: organization
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: toolname
        schema:
          type: string
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: author
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: string
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolV1'
                type: array
          description: An array of Tools that match the filter.
      summary: List all tools
      tags:
      - GA4GHV1
  /api/ga4gh/v1/tools/{id}:
    get:
      description: This endpoint returns one specific tool (which has ToolVersions
        nested inside it)
      operationId: toolsIdGetV1
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolV1'
          description: A tool.
      summary: List one specific tool, acts as an anchor for self references
      tags:
      - GA4GHV1
  /api/ga4gh/v1/tools/{id}/versions:
    get:
      description: Returns all versions of the specified tool
      operationId: toolsIdVersionGetV1
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolVersionV1'
                type: array
          description: An array of tool versions
      summary: List versions of a tool
      tags:
      - GA4GHV1
  /api/ga4gh/v1/tools/{id}/versions/{version_id}:
    get:
      description: This endpoint returns one specific tool version
      operationId: versionIdGetV1
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: version_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolVersionV1'
          description: A tool version.
      summary: List one specific tool version, acts as an anchor for self references
      tags:
      - GA4GHV1
  /api/ga4gh/v1/tools/{id}/versions/{version_id}/dockerfile:
    get:
      description: Returns the dockerfile for the specified image.
      operationId: dockerfileGetV1
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: version_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolDockerfile'
          description: The tool payload.
      summary: Get the dockerfile for the specified image.
      tags:
      - GA4GHV1
  /api/ga4gh/v1/tools/{id}/versions/{version_id}/{type}/descriptor:
    get:
      description: Returns the CWL or WDL descriptor for the specified tool.
      operationId: descriptorGetV1
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: version_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolDescriptor'
          description: The tool descriptor.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolDescriptor'
          description: The tool can not be output in the specified type.
      summary: Get the tool descriptor (CWL/WDL) for the specified tool.
      tags:
      - GA4GHV1
  /api/ga4gh/v1/tools/{id}/versions/{version_id}/{type}/descriptor/{relative_path}:
    get:
      description: Returns additional CWL or WDL descriptors for the specified tool
        in the same or subdirectories
      operationId: relativeDescriptorGetV1
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: version_id
        required: true
        schema:
          type: string
      - in: path
        name: relative_path
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolDescriptor'
          description: The tool descriptor.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolDescriptor'
          description: The tool can not be output in the specified type.
      summary: Get additional tool descriptor files (CWL/WDL) relative to the main
        file
      tags:
      - GA4GHV1
  /api/ga4gh/v1/tools/{id}/versions/{version_id}/{type}/tests:
    get:
      operationId: testsGetV1
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: version_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolTestsV1'
                type: array
          description: The tool test JSON response.
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolTestsV1'
                type: array
          description: The tool can not be output in the specified type.
      summary: Get an array of test JSONs suitable for use with this descriptor type.
      tags:
      - GA4GHV1
  /api/ga4gh/v2/extended/containers/{organization}:
    get:
      description: This endpoint returns entries of an organization.
      operationId: entriesOrgGet
      parameters:
      - in: path
        name: organization
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolV1'
                type: array
          description: An array of Tools of the input organization.
      summary: List entries of an organization
      tags:
      - extendedGA4GH
  /api/ga4gh/v2/extended/organizations:
    get:
      description: This endpoint returns list of all organizations.
      operationId: entriesOrgsGet
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: An array of organizations' names.
      summary: List all organizations
      tags:
      - extendedGA4GH
  /api/ga4gh/v2/extended/tools/entry/_search:
    post:
      description: This endpoint searches the index for all published tools and workflows.
        Used by utilities that expect to talk to an elastic search endpoint.
      operationId: toolsIndexSearch
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: An elastic search result.
      summary: Search the index of tools
      tags:
      - extendedGA4GH
  /api/ga4gh/v2/extended/tools/index:
    post:
      description: This endpoint updates the index for all published tools and workflows.
      operationId: Update the index of tools
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: integer
          description: An array of Tools of the input organization.
      summary: Update the index of tools
      tags:
      - extendedGA4GH
  /api/ga4gh/v2/extended/tools/{organization}:
    get:
      description: This endpoint returns tools of an organization.
      operationId: toolsOrgGet
      parameters:
      - in: path
        name: organization
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolV1'
                type: array
          description: An array of Tools of the input organization.
      summary: List tools of an organization
      tags:
      - extendedGA4GH
  /api/ga4gh/v2/extended/workflows/{organization}:
    get:
      description: This endpoint returns workflows of an organization.
      operationId: workflowsOrgGet
      parameters:
      - in: path
        name: organization
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolV1'
                type: array
          description: An array of Tools of the input organization.
      summary: List workflows of an organization
      tags:
      - extendedGA4GH
  /api/ga4gh/v2/extended/{id}/versions/{version_id}/{type}/tests/{relative_path}:
    post:
      description: Test JSON can be annotated with whether they ran correctly keyed
        by platform and associated with some metadata.
      operationId: verifyTestParameterFilePost
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: version_id
        required: true
        schema:
          type: string
      - in: path
        name: relative_path
        required: true
        schema:
          type: string
      - in: query
        name: platform
        schema:
          type: string
      - in: query
        name: platform_version
        schema:
          type: string
      - in: query
        name: verified
        schema:
          type: boolean
      - in: query
        name: metadata
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The tool test JSON response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Credentials not provided or incorrect.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The tool test cannot be found to annotate.
      summary: Annotate test JSON with information on whether it ran successfully
        on particular platforms plus metadata
      tags:
      - extendedGA4GH
  /auth/tokens/orcid.org:
    post:
      description: Using OAuth code from ORCID, request and store tokens from ORCID
        API
      operationId: addOrcidToken
      parameters:
      - in: query
        name: code
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: default response
      summary: Add a new orcid.org token
      tags:
      - tokens
  /entries/{id}/topic:
    post:
      description: Create a discourse topic for an entry.
      operationId: setDiscourseTopic
      parameters:
      - description: The id of the entry to add a topic to.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
          description: default response
      tags:
      - entries
  /events:
    get:
      description: Optional authentication.
      operationId: getEvents
      parameters:
      - in: query
        name: event_search_type
        schema:
          enum:
          - STARRED_ENTRIES
          - STARRED_ORGANIZATION
          - ALL_STARRED
          type: string
      - in: query
        name: limit
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      - in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Event'
                type: array
          description: default response
      summary: Get events based on filters.
      tags:
      - events
  /ga4gh/trs/v2/toolClasses:
    get:
      description: 'This endpoint returns all tool-classes available. '
      operationId: toolClassesGet
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolClass'
                type: array
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/ToolClass'
                type: array
          description: A list of potential tool classes.
      summary: List all tool types
      tags:
      - GA4GHV20
  /ga4gh/trs/v2/tools:
    get:
      description: 'This endpoint returns all tools available or a filtered subset
        using metadata query parameters. '
      operationId: toolsGet
      parameters:
      - description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        in: query
        name: id
        schema:
          type: string
      - description: Support for this parameter is optional for tool registries that
          support aliases. If provided will only return entries with the given alias.
        in: query
        name: alias
        schema:
          type: string
      - description: Filter tools by the name of the subclass (#/definitions/ToolClass)
        in: query
        name: toolClass
        schema:
          type: string
      - description: The image registry that contains the image.
        in: query
        name: registry
        schema:
          type: string
      - description: The organization in the registry that published the image.
        in: query
        name: organization
        schema:
          type: string
      - description: The name of the image.
        in: query
        name: name
        schema:
          type: string
      - description: The name of the tool.
        in: query
        name: toolname
        schema:
          type: string
      - description: The description of the tool.
        in: query
        name: description
        schema:
          type: string
      - description: The author of the tool (TODO a thought occurs, are we assuming
          that the author of the CWL and the image are the same?).
        in: query
        name: author
        schema:
          type: string
      - description: Return only checker workflows.
        in: query
        name: checker
        schema:
          type: boolean
      - description: Start index of paging. Pagination results can be based on numbers
          or other values chosen by the registry implementor (for example, SHA values).
          If this exceeds the current result set return an empty set.  If not specified
          in the request, this will start at the beginning of the results.
        in: query
        name: offset
        schema:
          type: string
      - description: Amount of records to return in a given page.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tool'
                type: array
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/Tool'
                type: array
          description: An array of Tools that match the filter.
      summary: List all tools
      tags:
      - GA4GHV20
  /ga4gh/trs/v2/tools/{id}:
    get:
      description: This endpoint returns one specific tool (which has ToolVersions
        nested inside it).
      operationId: toolsIdGet
      parameters:
      - description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tool'
            text/plain:
              schema:
                $ref: '#/components/schemas/Tool'
          description: A tool.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
          description: The tool can not be found.
      summary: List one specific tool, acts as an anchor for self references
      tags:
      - GA4GHV20
  /ga4gh/trs/v2/tools/{id}/versions:
    get:
      description: Returns all versions of the specified tool.
      operationId: toolsIdVersionsGet
      parameters:
      - description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolVersion'
                type: array
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/ToolVersion'
                type: array
          description: An array of tool versions.
      summary: List versions of a tool
      tags:
      - GA4GHV20
  /ga4gh/trs/v2/tools/{id}/versions/{version_id}:
    get:
      description: This endpoint returns one specific tool version.
      operationId: toolsIdVersionsVersionIdGet
      parameters:
      - description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: An identifier of the tool version, scoped to this registry, for
          example `v1`. We recommend that versions use semantic versioning https://semver.org/spec/v2.0.0.html  (For
          example, `1.0.0` instead of `develop`)
        in: path
        name: version_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolVersion'
            text/plain:
              schema:
                $ref: '#/components/schemas/ToolVersion'
          description: A tool version.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
          description: The tool can not be found.
      summary: List one specific tool version, acts as an anchor for self references
      tags:
      - GA4GHV20
  /ga4gh/trs/v2/tools/{id}/versions/{version_id}/containerfile:
    get:
      description: Returns the container specifications(s) for the specified image.
        For example, a CWL CommandlineTool can be associated with one specification
        for a container, a CWL Workflow can be associated with multiple specifications
        for containers.
      operationId: toolsIdVersionsVersionIdContainerfileGet
      parameters:
      - description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: An identifier of the tool version for this particular tool registry,
          for example `v1`.
        in: path
        name: version_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileWrapper'
                type: array
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/FileWrapper'
                type: array
          description: The tool payload.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
          description: There are no container specifications for this tool.
      summary: Get the container specification(s) for the specified image.
      tags:
      - GA4GHV20
  /ga4gh/trs/v2/tools/{id}/versions/{version_id}/{type}/descriptor:
    get:
      description: Returns the descriptor for the specified tool (examples include
        CWL, WDL, or Nextflow documents).
      operationId: toolsIdVersionsVersionIdTypeDescriptorGet
      parameters:
      - description: The output type of the descriptor. Plain types return the bare
          descriptor while the "non-plain" types return a descriptor wrapped with
          metadata. Allowable values include "CWL", "WDL", "NFL", "PLAIN_CWL", "PLAIN_WDL",
          "PLAIN_NFL".
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: An identifier of the tool version, scoped to this registry, for
          example `v1`.
        in: path
        name: version_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileWrapper'
            text/plain:
              schema:
                $ref: '#/components/schemas/FileWrapper'
          description: The tool descriptor.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
          description: The tool descriptor can not be found.
      summary: Get the tool descriptor for the specified tool
      tags:
      - GA4GHV20
  /ga4gh/trs/v2/tools/{id}/versions/{version_id}/{type}/descriptor/{relative_path}:
    get:
      description: Descriptors can often include imports that refer to additional
        descriptors. This returns additional descriptors for the specified tool in
        the same or other directories that can be reached as a relative path. This
        endpoint can be useful for workflow engine implementations like cwltool to
        programmatically download all the descriptors for a tool and run it. This
        can optionally include other files described with FileWrappers such as test
        parameters and containerfiles.
      operationId: toolsIdVersionsVersionIdTypeDescriptorRelativePathGet
      parameters:
      - description: The output type of the descriptor. If not specified, it is up
          to the underlying implementation to determine which output type to return.
          Plain types return the bare descriptor while the "non-plain" types return
          a descriptor wrapped with metadata. Allowable values are "CWL", "WDL", "NFL",
          "PLAIN_CWL", "PLAIN_WDL", "PLAIN_NFL".
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: An identifier of the tool version for this particular tool registry,
          for example `v1`.
        in: path
        name: version_id
        required: true
        schema:
          type: string
      - description: A relative path to the additional file (same directory or subdirectories),
          for example 'foo.cwl' would return a 'foo.cwl' from the same directory as
          the main descriptor. 'nestedDirectory/foo.cwl' would return the file  from
          a nested subdirectory.  Unencoded paths such 'sampleDirectory/foo.cwl' should
          also be allowed.
        in: path
        name: relative_path
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileWrapper'
            text/plain:
              schema:
                $ref: '#/components/schemas/FileWrapper'
          description: The tool descriptor.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
          description: The tool can not be output in the specified type.
      summary: Get additional tool descriptor files relative to the main file
      tags:
      - GA4GHV20
  /ga4gh/trs/v2/tools/{id}/versions/{version_id}/{type}/files:
    get:
      description: 'Get a list of objects that contain the relative path and file
        type. The descriptors are intended for use with the /tools/{id}/versions/{version_id}/{type}/descriptor/{relative_path
        : .+} endpoint.'
      operationId: toolsIdVersionsVersionIdTypeFilesGet
      parameters:
      - description: The output type of the descriptor. Examples of allowable values
          are "CWL", "WDL", and "NFL".
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: An identifier of the tool version for this particular tool registry,
          for example `v1`.
        in: path
        name: version_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolFile'
                type: array
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/ToolFile'
                type: array
          description: The array of File JSON responses.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
          description: The tool can not be output in the specified type.
      summary: Get a list of objects that contain the relative path and file type
      tags:
      - GA4GHV20
  /ga4gh/trs/v2/tools/{id}/versions/{version_id}/{type}/tests:
    get:
      description: Get a list of test JSONs (these allow you to execute the tool successfully)
        suitable for use with this descriptor type.
      operationId: toolsIdVersionsVersionIdTypeTestsGet
      parameters:
      - description: The type of the underlying descriptor. Allowable values include
          "CWL", "WDL", "NFL", "PLAIN_CWL", "PLAIN_WDL", "PLAIN_NFL". For example,
          "CWL" would return an list of ToolTests objects while "PLAIN_CWL" would
          return a bare JSON list with the content of the tests.
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: An identifier of the tool version for this particular tool registry,
          for example `v1`.
        in: path
        name: version_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileWrapper'
                type: array
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/FileWrapper'
                type: array
          description: The tool test JSON response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
          description: The tool can not be output in the specified type.
      summary: Get a list of test JSONs
      tags:
      - GA4GHV20
  /metadata/config.json:
    get:
      description: Configuration, NO authentication
      operationId: getConfig
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
          description: default response
      summary: Configuration for UI clients of the API
      tags:
      - metadata
  /metadata/descriptorLanguageList:
    get:
      description: Get the list of descriptor languages supported on Dockstore, NO
        authentication
      operationId: getDescriptorLanguages
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DescriptorLanguageBean'
                type: array
          description: List of descriptor languages
      summary: Get the list of descriptor languages supported on Dockstore
      tags:
      - metadata
  /metadata/dockerRegistryList:
    get:
      description: Get the list of docker registries supported on Dockstore, NO authentication
      operationId: getDockerRegistries
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RegistryBean'
                type: array
          description: List of Docker registries
      summary: Get the list of docker registries supported on Dockstore
      tags:
      - metadata
  /metadata/elasticSearch:
    get:
      description: Successful response if elastic search is up and running, NO authentication
      operationId: checkElasticSearch
      responses:
        default:
          description: default response
      summary: Successful response if elastic search is up and running
      tags:
      - metadata
  /metadata/okHttpCachePerformance:
    get:
      description: Get measures of cache performance, NO authentication
      operationId: getCachePerformance
      responses:
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Cache performance information
      summary: Get measures of cache performance
      tags:
      - metadata
  /metadata/rss:
    get:
      description: List all published tools and workflows in creation order, NO authentication
      operationId: rssFeed
      responses:
        default:
          content:
            text/xml:
              schema:
                type: string
          description: default response
      summary: List all published tools and workflows in creation order
      tags:
      - metadata
  /metadata/runner_dependencies:
    get:
      description: Returns the file containing runner dependencies, NO authentication
      operationId: getRunnerDependencies
      parameters:
      - description: The Dockstore client version
        in: query
        name: client_version
        schema:
          type: string
      - description: Python version, only relevant for the cwltool runner
        in: query
        name: python_version
        schema:
          default: "3"
          type: string
      - description: The tool runner
        in: query
        name: runner
        schema:
          default: cwltool
          enum:
          - cwltool
          type: string
      - description: Response type
        in: query
        name: output
        schema:
          default: text
          enum:
          - json
          - text
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: The requirements.txt file
      summary: Returns the file containing runner dependencies
      tags:
      - metadata
  /metadata/sitemap:
    get:
      description: List all available workflow, tool, organization, and collection
        paths. Available means published for tools/workflows, and approved for organizations
        and their respective collections. NO authentication
      operationId: sitemap
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
            text/xml:
              schema:
                type: string
          description: default response
      summary: List all available workflow, tool, organization, and collection paths.
      tags:
      - metadata
  /metadata/sourceControlList:
    get:
      description: Get the list of source controls supported on Dockstore, NO authentication
      operationId: getSourceControlList
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SourceControlBean'
                type: array
          description: List of source control repositories
      summary: Get the list of source controls supported on Dockstore
      tags:
      - metadata
  /organizations:
    get:
      description: List all organizations that have been approved by a curator or
        admin, sorted by number of stars.
      operationId: getApprovedOrganizations
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
          description: default response
      summary: List all available organizations.
      tags:
      - organizations
    post:
      description: Create an organization. Organization requires approval by an admin
        before being made public.
      operationId: createOrganization
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Organization'
        description: Organization to register.
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: default response
      summary: Create an organization.
      tags:
      - organizations
  /organizations/all:
    get:
      description: List all organizations, regardless of organization status. Admin/curator
        only.
      operationId: getAllOrganizations
      parameters:
      - description: Filter to apply to organizations.
        in: query
        name: type
        required: true
        schema:
          enum:
          - all
          - pending
          - rejected
          - approved
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
          description: default response
      summary: List all organizations.
      tags:
      - organizations
  /organizations/collections/{alias}/aliases:
    get:
      description: Retrieve a collection by alias.
      operationId: getCollectionByAlias
      parameters:
      - description: Alias of the collection.
        in: path
        name: alias
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: default response
      summary: Retrieve a collection by alias.
      tags:
      - organizations
  /organizations/collections/{collectionId}/aliases:
    post:
      description: Aliases are alphanumerical (case-insensitive and may contain internal
        hyphens), given in a comma-delimited list.
      operationId: addCollectionAliases_1
      parameters:
      - description: Collection to modify.
        in: path
        name: collectionId
        required: true
        schema:
          format: int64
          type: integer
      - description: Comma-delimited list of aliases.
        in: query
        name: aliases
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aliasable'
          description: default response
      summary: Add aliases linked to a collection in Dockstore.
      tags:
      - organizations
  /organizations/name/{name}:
    get:
      description: Retrieve an organization by name. Supports optional authentication.
      operationId: getOrganizationByName
      parameters:
      - description: Organization name.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: default response
      summary: Retrieve an organization by name.
      tags:
      - organizations
  /organizations/{alias}/aliases:
    get:
      description: Retrieve an organization by alias.
      operationId: getOrganizationByAlias
      parameters:
      - description: Alias.
        in: path
        name: alias
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: default response
      summary: Retrieve an organization by alias.
      tags:
      - organizations
  /organizations/{organizationId}:
    get:
      description: Retrieve an organization by ID. Supports optional authentication.
      operationId: getOrganizationById
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: default response
      summary: Retrieve an organization by ID.
      tags:
      - organizations
    put:
      description: Update an organization. Currently only name, display name, description,
        topic, email, link, avatarUrl, and location can be updated.
      operationId: updateOrganization
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Organization'
        description: Organization to register.
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: default response
      summary: Update an organization.
      tags:
      - organizations
  /organizations/{organizationId}/aliases:
    post:
      description: Add aliases linked to a listing in Dockstore. Aliases are alphanumerical
        (case-insensitive and may contain internal hyphens), given in a comma-delimited
        list.
      operationId: addOrganizationAliases_1
      parameters:
      - description: Organization to modify.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      - description: Comma-delimited list of aliases.
        in: query
        name: aliases
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aliasable'
          description: default response
      summary: Add aliases linked to a listing in Dockstore.
      tags:
      - organizations
  /organizations/{organizationId}/approve:
    post:
      description: Approve the organization with the given id. Admin/curator only.
      operationId: approveOrganization
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: default response
      summary: Approve an organization.
      tags:
      - organizations
  /organizations/{organizationId}/collections:
    get:
      description: Retrieve all collections for an organization. Supports optional
        authentication.
      operationId: getCollectionsFromOrganization
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      - description: Included fields.
        in: query
        name: include
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Collection'
                type: array
          description: default response
      summary: Retrieve all collections for an organization.
      tags:
      - organizations
    post:
      description: Create a collection in the given organization.
      operationId: createCollection
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Collection'
        description: Collection to register.
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: default response
      summary: Create a collection in the given organization.
      tags:
      - organizations
  /organizations/{organizationId}/collections/{collectionId}:
    get:
      description: Retrieve a collection by ID. Supports optional authentication.
      operationId: getCollectionById
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      - description: Collection ID.
        in: path
        name: collectionId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: default response
      summary: Retrieve a collection by ID.
      tags:
      - organizations
    put:
      description: Update a collection. Currently only name, display name, description,
        and topic can be updated.
      operationId: updateCollection
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      - description: Collection ID.
        in: path
        name: collectionId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Collection'
        description: Collection to register.
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: default response
      summary: Update a collection.
      tags:
      - organizations
  /organizations/{organizationId}/collections/{collectionId}/description:
    get:
      description: Retrieve a collection description by organization ID and collection
        ID. Supports optional authentication.
      operationId: getCollectionDescription
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      - description: Collection ID.
        in: path
        name: collectionId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      summary: Retrieve a collection description by organization ID and collection
        ID.
      tags:
      - organizations
    put:
      description: Update a collection's description. Description in markdown.
      operationId: updateCollectionDescription
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      - description: Collection ID.
        in: path
        name: collectionId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
        description: Collections's description in markdown.
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: default response
      summary: Update a collection's description.
      tags:
      - organizations
  /organizations/{organizationId}/collections/{collectionId}/entry:
    delete:
      description: Delete an entry to a collection.
      operationId: deleteEntryFromCollection
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      - description: Collection ID.
        in: path
        name: collectionId
        required: true
        schema:
          format: int64
          type: integer
      - description: Entry ID.
        in: query
        name: entryId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: default response
      summary: Delete an entry to a collection.
      tags:
      - organizations
    post:
      description: Add an entry to a collection.
      operationId: addEntryToCollection
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      - description: Collection ID.
        in: path
        name: collectionId
        required: true
        schema:
          format: int64
          type: integer
      - description: Entry ID.
        in: query
        name: entryId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: default response
      summary: Add an entry to a collection.
      tags:
      - organizations
  /organizations/{organizationId}/description:
    get:
      description: Retrieve an organization description by organization ID. Supports
        optional authentication.
      operationId: getOrganizationDescription
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      summary: Retrieve an organization description by organization ID.
      tags:
      - organizations
    put:
      description: Update an organization's description. Expects description in markdown
        format.
      operationId: updateOrganizationDescription
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
        description: Organization's description in markdown.
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: default response
      summary: Update an organization's description.
      tags:
      - organizations
  /organizations/{organizationId}/events:
    get:
      description: Retrieve all events for an organization. Supports optional authentication.
      operationId: getOrganizationEvents
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      - description: Start index of paging.  If this exceeds the current result set
          return an empty set.  If not specified in the request, this will start at
          the beginning of the results.
        in: query
        name: offset
        required: true
        schema:
          default: 0
          format: int32
          type: integer
      - description: Amount of records to return in a given page, limited to 100
        in: query
        name: limit
        required: true
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Event'
                type: array
          description: default response
      summary: Retrieve all events for an organization.
      tags:
      - organizations
  /organizations/{organizationId}/invitation:
    post:
      description: Accept or reject an organization invitation. True accepts the invitation,
        false rejects the invitation.
      operationId: acceptOrRejectInvitation
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      - description: Accept or reject.
        in: query
        name: accept
        required: true
        schema:
          type: boolean
      responses:
        default:
          description: default response
      summary: Accept or reject an organization invitation.
      tags:
      - organizations
  /organizations/{organizationId}/members:
    get:
      description: Retrieve all members for an organization. Supports optional authentication.
      operationId: getOrganizationMembers
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationUser'
                type: array
                uniqueItems: true
          description: default response
      summary: Retrieve all members for an organization.
      tags:
      - organizations
  /organizations/{organizationId}/reject:
    post:
      description: Reject the organization with the given id. Admin/curator only.
      operationId: rejectOrganization
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: default response
      summary: Reject an organization.
      tags:
      - organizations
  /organizations/{organizationId}/request:
    post:
      description: Re-request a review of the given organization. Requires the organization
        to be rejected.
      operationId: requestOrganizationReview
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: default response
      summary: Re-request an organization review.
      tags:
      - organizations
  /organizations/{organizationId}/star:
    put:
      description: Star an organization.
      operationId: starOrganization
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/StarRequest'
        description: StarRequest to star an organization for a user.
        required: true
      responses:
        default:
          description: default response
      summary: Star an organization.
      tags:
      - organizations
  /organizations/{organizationId}/starredUsers:
    get:
      description: Return list of users who starred the given approved organization.
      operationId: getStarredUsersForApprovedOrganization
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
                uniqueItems: true
          description: default response
      summary: Return list of users who starred the given approved organization.
      tags:
      - organizations
  /organizations/{organizationId}/unstar:
    delete:
      description: Unstar an organization.
      operationId: unstarOrganization
      parameters:
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: default response
      summary: Unstar an organization.
      tags:
      - organizations
  /organizations/{organizationId}/user:
    delete:
      description: Remove a user from an organization.
      operationId: deleteUserRole
      parameters:
      - description: User ID of user to add to organization.
        in: query
        name: userId
        required: true
        schema:
          format: int64
          type: integer
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: default response
      summary: Remove a user from an organization.
      tags:
      - organizations
    post:
      description: Update a user role in an organization.
      operationId: updateUserRole
      parameters:
      - description: Role of user.
        in: query
        name: role
        required: true
        schema:
          enum:
          - MAINTAINER
          - MEMBER
          type: string
      - description: User ID of user to add to organization.
        in: query
        name: userId
        required: true
        schema:
          format: int64
          type: integer
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
          description: default response
      summary: Update a user role in an organization.
      tags:
      - organizations
    put:
      description: Add a user role to an organization.
      operationId: addUserToOrg
      parameters:
      - description: Role of user.
        in: query
        name: role
        required: true
        schema:
          enum:
          - MAINTAINER
          - MEMBER
          type: string
      - description: User ID of user to add to organization.
        in: query
        name: userId
        required: true
        schema:
          format: int64
          type: integer
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
        description: This is here to appease Swagger. It requires PUT methods to have
          a body, even if it is empty. Please leave it empty.
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
          description: default response
      summary: Add a user role to an organization.
      tags:
      - organizations
  /organizations/{organizationId}/users/{username}:
    put:
      description: Add a user role to an organization.
      operationId: addUserToOrgByUsername
      parameters:
      - description: User to add to org.
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Organization ID.
        in: path
        name: organizationId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              enum:
              - MAINTAINER
              - MEMBER
              type: string
        description: Role of user.
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
          description: default response
      summary: Add a user role to an organization.
      tags:
      - organizations
  /organizations/{organizationName}/collections/{collectionName}/name:
    get:
      description: Retrieve a collection by name. Supports optional authentication.
      operationId: getCollectionById_1
      parameters:
      - description: Organization name.
        in: path
        name: organizationName
        required: true
        schema:
          type: string
      - description: Collection name.
        in: path
        name: collectionName
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: default response
      summary: Retrieve a collection by name.
      tags:
      - organizations
  /toolTester/logs:
    get:
      operationId: getToolTesterLog
      parameters:
      - description: TRS Tool Id
        example: '#workflow/github.com/dockstore/hello_world'
        in: query
        name: tool_id
        required: true
        schema:
          type: string
      - example: v1.0.0
        in: query
        name: tool_version_name
        required: true
        schema:
          type: string
      - example: hello_world.cwl.json
        in: query
        name: test_filename
        required: true
        schema:
          type: string
      - example: cwltool
        in: query
        name: runner
        required: true
        schema:
          type: string
      - in: query
        name: log_type
        required: true
        schema:
          enum:
          - FULL
          - SUMMARY
          type: string
      - example: 1554477737092.log
        in: query
        name: filename
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            text/plain:
              schema:
                type: string
          description: default response
      summary: Get ToolTester log file
      tags:
      - toolTester
  /toolTester/logs/search:
    get:
      operationId: search
      parameters:
      - description: TRS Tool Id
        example: '#workflow/github.com/dockstore/hello_world'
        in: query
        name: tool_id
        required: true
        schema:
          type: string
      - example: v1.0.0
        in: query
        name: tool_version_name
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolTesterLog'
                type: array
          description: default response
      summary: Search for ToolTester log files
      tags:
      - toolTester
  /users/registries:
    get:
      description: Get all of the git registries accessible to the logged in user.
      operationId: getUserRegistries
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  enum:
                  - dockstore.org
                  - github.com
                  - bitbucket.org
                  - gitlab.com
                  type: string
                type: array
          description: default response
      tags:
      - users
  /users/registries/{gitRegistry}/organizations:
    get:
      description: Get all of the organizations for a given git registry accessible
        to the logged in user.
      operationId: getUserOrganizations
      parameters:
      - description: Git registry
        in: path
        name: gitRegistry
        required: true
        schema:
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
                uniqueItems: true
          description: default response
      tags:
      - users
  /users/registries/{gitRegistry}/organizations/{organization}:
    get:
      description: Get all of the repositories for an organization for a given git
        registry accessible to the logged in user.
      operationId: getUserOrganizationRepositories
      parameters:
      - description: Git registry
        in: path
        name: gitRegistry
        required: true
        schema:
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
          type: string
      - description: Git organization
        in: path
        name: organization
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
          description: default response
      tags:
      - users
  /users/user:
    get:
      operationId: getUser
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: default response
      tags:
      - users
  /users/users/entries:
    get:
      description: Get all of the entries for a user, sorted by most recently updated.
      operationId: getUserEntries
      parameters:
      - description: Maximum number of entries to return
        in: query
        name: count
        schema:
          format: int32
          type: integer
      - description: Filter paths with matching text
        in: query
        name: filter
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EntryUpdateTime'
                type: array
          description: default response
      tags:
      - users
  /users/users/organizations:
    get:
      description: Get all of the Dockstore organizations for a user, sorted by most
        recently updated.
      operationId: getUserDockstoreOrganizations
      parameters:
      - description: Maximum number of organizations to return
        in: query
        name: count
        schema:
          format: int32
          type: integer
      - description: Filter paths with matching text
        in: query
        name: filter
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationUpdateTime'
                type: array
          description: default response
      tags:
      - users
  /users/{userId}:
    get:
      operationId: getSpecificUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: default response
      tags:
      - users
  /workflows/github/release:
    post:
      description: Handle a release of a repository on GitHub. Will create a workflow/service
        and version when necessary.
      operationId: handleGitHubRelease
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                gitReference:
                  type: string
                installationId:
                  type: string
                repository:
                  type: string
                username:
                  type: string
              type: object
      responses:
        "418":
          description: This code tells AWS Lambda not to retry.
      tags:
      - workflows
  /workflows/hostedEntry/{entryId}:
    post:
      deprecated: true
      operationId: addZip
      parameters:
      - description: hosted entry ID
        in: path
        name: entryId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: successful operation
      summary: Creates a new revision of a hosted workflow from a zip
      tags:
      - hosted
  /workflows/registries/{gitRegistry}/organizations/{organization}/repositories/{repositoryName}:
    delete:
      description: Delete a stubbed workflow for a registry and repository path.
      operationId: deleteWorkflow
      parameters:
      - description: Git registry
        in: path
        name: gitRegistry
        required: true
        schema:
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
          type: string
      - description: Git repository organization
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Git repository name
        in: path
        name: repositoryName
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
      tags:
      - workflows
    post:
      description: Adds a workflow for a registry and repository path with defaults
        set.
      operationId: addWorkflow
      parameters:
      - description: Git registry
        in: path
        name: gitRegistry
        required: true
        schema:
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
          type: string
      - description: Git repository organization
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Git repository name
        in: path
        name: repositoryName
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BioWorkflow'
          description: default response
      tags:
      - workflows
servers:
- description: Current server when hosted on AWS
  url: /api
- description: When working locally
  url: /
- description: Production server
  url: https://dockstore.org/api
- description: Staging server
  url: https://staging.dockstore.org/api
- description: Nightly build server
  url: https://dev.dockstore.net/api
tags:
- description: Create, update list aliases for accessing entries
  name: aliases
- description: Operations on Dockstore organizations
  name: organizations
- description: Needed for SmartAPI compatibility apparantly, might be cargo cult behaviour
  name: NIHdatacommons
- description: List and register entries in the dockstore (pairs of images + metadata
    (CWL and Dockerfile))
  name: containers
- description: List and modify tags for containers
  name: containertags
- description: Interact with entries in Dockstore regardless of whether they are containers
    or workflows
  name: entries
- description: Created and modify hosted entries in the dockstore
  name: hosted
- description: Information about Dockstore like RSS, sitemap, lists of dependencies,
    etc.
  name: metadata
- description: List and modify notifications for users of Dockstore
  name: curation
- description: List and register workflows in the dockstore (CWL, Nextflow, WDL)
  name: workflows
- description: List, modify, refresh, and delete tokens for external services
  name: tokens
- description: Interactions with the Dockstore-support's ToolTester application
  name: toolTester
- description: List, modify, and manage end users of the dockstore
  name: users
- description: Optional experimental extensions of the GA4GH API
  name: extendedGA4GH
- description: A curated subset of resources proposed as a common standard for tool
    repositories. Implements TRS [2.0.0](https://github.com/ga4gh/tool-registry-service-schemas/releases/tag/2.0.0).
  name: GA4GHV20
- description: A curated subset of resources proposed as a common standard for tool
    repositories. Implements TRS [2.0.0-beta.2](https://github.com/ga4gh/tool-registry-service-schemas/releases/tag/2.0.0-beta.2)
    . Integrators are welcome to use these endpoints but they are subject to change
    based on community input.
  name: GA4GH
- description: A curated subset of resources proposed as a common standard for tool
    repositories. Implements TRS [1.0.0](https://github.com/ga4gh/tool-registry-service-schemas/releases/tag/1.0.0)
    and is considered final (not subject to change)
  name: GA4GHV1
